var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.505,1,1.716]],["body/controllers/AppController.html",[0,2.368,1,2.7,2,1.677,3,0.612,4,0.524,5,0.524,6,2.944,7,0.92,8,2.092,9,4.192,10,2.164,11,0.046,12,1.321,13,3.622,14,1.677,15,1.855,16,1.009,17,1.173,18,2.28,19,2.944,20,0.612,21,0.153,22,2.944,23,2.498,24,1.677,25,3.622,26,0.036,27,0.036]],["title/modules/AppModule.html",[28,1.329,29,1.716]],["body/modules/AppModule.html",[1,2.454,2,1.641,3,0.694,4,0.364,5,0.364,11,0.046,16,1.162,17,0.814,18,2.258,19,2.044,20,0.425,21,0.106,26,0.029,27,0.029,28,1.641,29,3.058,30,1.164,31,1.641,32,2.044,33,2.044,34,2.044,35,2.556,36,2.118,37,1.503,38,1.503,39,2.515,40,2.445,41,2.445,42,2.515,43,2.515,44,2.044,45,1.318,46,1.318,47,2.515,48,2.515,49,1.503,50,2.831,51,3.545,52,2.515,53,2.515,54,3.821,55,3.545,56,2.515,57,2.515,58,2.515,59,2.515,60,2.515,61,2.515,62,2.515,63,2.515,64,2.044,65,2.515,66,2.515,67,2.515,68,2.337,69,4.106,70,4.106,71,4.106,72,2.515,73,4.106,74,2.515,75,3.545,76,2.515,77,2.515,78,2.044,79,2.515,80,2.515,81,2.515]],["title/injectables/AppService.html",[18,1.329,82,1.178]],["body/injectables/AppService.html",[3,0.641,4,0.549,5,0.549,7,0.964,8,2.153,9,4.262,11,0.045,12,1.384,14,1.757,15,1.909,16,0.848,17,1.229,18,2.153,20,0.641,21,0.16,24,1.757,26,0.037,27,0.037,82,1.909,83,2.268,84,3.085,85,3.795,86,3.795,87,3.795]],["title/modules/AuthModule.html",[28,1.329,88,1.505]],["body/modules/AuthModule.html",[2,1.572,3,0.574,4,0.491,5,0.491,11,0.046,16,1.068,17,1.1,20,0.574,21,0.143,26,0.035,27,0.035,28,2.008,30,1.572,31,2.008,36,2.593,37,2.029,38,2.029,40,2.992,41,2.342,88,2.79,89,2.761,90,2.761,91,2.79,92,3.396,93,4.339,94,2.029,95,3.396,96,3.396,97,3.396,98,2.342,99,3.396,100,2.761,101,3.396,102,3.396,103,3.396]],["title/entities/Book.html",[104,1.98,105,1.047]],["body/entities/Book.html",[3,0.37,4,0.317,5,0.317,7,0.557,10,2.948,11,0.046,12,1.799,15,2.153,16,0.717,20,0.37,21,0.092,26,0.026,27,0.026,104,2.215,105,1.171,106,1.512,107,1.782,108,1.683,109,1.992,110,1.76,111,2.622,112,2.622,113,2.622,114,2.622,115,2.622,116,2.622,117,2.025,118,4.01,119,2.611,120,2.782,121,2.192,122,2.192,123,2.611,124,2.611,125,2.215,126,2.611,127,2.611,128,3.402,129,3.402,130,2.886,131,3.09,132,3.212,133,2.192,134,2.192,135,2.192,136,2.886,137,2.192,138,2.192,139,2.192,140,2.192,141,2.192,142,2.192,143,2.192,144,2.192,145,2.192,146,2.192,147,4.81,148,3.212,149,1.512,150,4.091,151,1.31,152,4.01,153,2.192,154,1.782,155,1.782,156,1.782,157,1.512,158,1.782]],["title/classes/Book-1.html",[21,0.102,105,0.88,159,1.665]],["body/classes/Book-1.html",[3,0.72,4,0.616,5,0.616,11,0.043,20,0.72,21,0.18,26,0.04,27,0.04,105,1.817,160,1.971,161,3.462]],["title/classes/BookDto.html",[21,0.121,162,1.505]],["body/classes/BookDto.html",[3,0.382,4,0.327,5,0.327,7,0.574,10,2.902,11,0.046,12,1.771,15,2.166,16,0.505,20,0.382,21,0.095,23,3.839,26,0.026,27,0.026,108,1.721,109,2.028,110,1.791,111,2.668,113,2.668,114,2.668,115,2.668,116,2.668,117,1.993,118,3.948,119,2.67,120,2.812,123,2.67,124,2.67,125,2.265,126,2.67,127,2.67,128,3.452,129,3.452,130,2.929,131,3.452,136,2.265,150,4.044,151,1.351,152,3.948,154,2.67,155,2.67,156,2.67,157,2.265,158,2.67,160,1.046,162,1.721,163,1.837,164,2.26,165,2.26,166,2.26,167,2.26,168,2.26,169,2.26,170,2.26]],["title/controllers/BooksController.html",[0,1.505,171,1.716]],["body/controllers/BooksController.html",[0,0.462,2,0.408,3,0.26,4,0.127,5,0.127,7,0.224,8,0.712,10,1.66,11,0.046,12,1.112,14,1.819,15,1.661,16,0.848,17,0.498,20,0.149,21,0.037,23,0.608,24,1.286,26,0.012,27,0.012,49,0.527,50,1.06,54,0.717,94,0.527,100,0.717,105,1.578,110,2.072,112,1.41,117,1.742,120,2.181,125,2.927,136,1.41,151,0.527,162,1.72,171,0.919,172,0.717,173,0.882,174,0.717,175,2.985,176,1.662,177,1.662,178,1.25,179,1.662,180,1.662,181,1.538,182,0.882,183,5.171,184,2.967,185,4.704,186,0.882,187,2.449,188,3.45,189,0.882,190,1.99,191,3.479,192,5.107,193,2.449,194,0.882,195,1.538,196,1.538,197,0.882,198,1.823,199,1.823,200,1.823,201,2.62,202,3.479,203,1.25,204,0.882,205,3.289,206,0.882,207,3.051,208,2.045,209,2.449,210,1.538,211,0.882,212,3.051,213,3.65,214,0.882,215,0.882,216,1.538,217,3.479,218,0.882,219,3.051,220,0.882,221,1.538,222,1.25,223,1.538,224,1.25,225,0.882,226,0.882,227,1.538,228,1.25,229,0.882,230,1.538,231,0.882,232,0.882,233,1.538,234,2.449,235,0.882,236,2.449,237,1.538,238,3.799,239,0.882,240,3.282,241,0.882,242,3.479,243,2.778,244,1.538,245,2.045,246,0.717,247,0.882,248,0.882,249,0.882,250,1.286,251,0.717,252,0.717,253,0.608,254,3.051,255,3.282,256,0.882,257,0.882,258,0.608,259,0.882,260,0.882,261,2.045,262,0.608,263,0.882,264,0.882,265,0.882,266,0.882,267,0.717,268,0.882,269,0.527,270,1.06,271,0.882,272,2.778,273,3.051,274,3.799,275,0.882,276,3.051,277,4.54,278,2.258,279,0.882,280,2.778,281,2.449,282,4.329,283,2.778,284,0.882,285,2.045,286,0.882,287,2.045,288,2.045,289,1.538,290,2.045,291,0.882,292,0.882,293,0.882,294,0.882,295,0.882,296,0.717,297,0.882,298,0.882,299,1.538,300,1.538,301,0.882,302,0.882,303,0.882,304,0.882,305,0.882,306,0.882,307,0.882]],["title/modules/BooksModule.html",[28,1.329,35,1.505]],["body/modules/BooksModule.html",[2,1.932,3,0.54,4,0.462,5,0.462,11,0.046,16,1.17,17,1.035,20,0.54,21,0.135,26,0.034,27,0.034,28,1.932,30,1.48,31,1.932,35,2.836,36,2.494,37,1.91,38,1.91,40,2.878,41,2.878,44,2.599,45,1.675,88,2.746,105,1.166,171,2.776,250,2.425,251,2.599,258,2.205,308,2.599,309,2.599,310,3.197,311,3.197,312,3.197,313,3.197,314,3.197]],["title/injectables/BooksService.html",[82,1.178,250,1.329]],["body/injectables/BooksService.html",[3,0.204,4,0.174,5,0.174,7,0.306,8,0.93,11,0.045,12,1.396,14,1.548,15,1.71,16,0.747,17,0.391,20,0.204,21,0.051,24,1.672,26,0.016,27,0.016,45,0.632,82,0.825,83,0.721,105,0.941,108,1.053,109,1.578,110,1.394,111,2.076,112,2.49,113,2.076,114,2.076,115,2.076,116,2.076,117,1.482,120,2.568,130,1.386,149,0.832,157,1.386,159,1.386,162,2.007,174,2.099,175,3.111,176,1.633,177,1.633,178,1.633,179,1.633,180,1.633,184,2.719,188,2.936,198,2.158,199,2.158,200,2.158,201,2.963,203,2.936,205,2.448,222,3.261,224,2.936,228,1.633,246,0.981,250,0.93,253,0.832,258,0.832,262,0.832,269,1.201,270,0.832,278,2.719,315,0.981,316,1.206,317,2.448,318,1.206,319,2.009,320,2.009,321,1.206,322,2.009,323,1.206,324,2.009,325,1.206,326,1.206,327,2.009,328,1.206,329,2.009,330,1.206,331,0.832,332,0.832,333,4.51,334,3.011,335,2.009,336,2.009,337,2.009,338,2.009,339,2.009,340,2.009,341,2.009,342,2.009,343,2.009,344,2.009,345,2.009,346,3.611,347,2.009,348,2.009,349,2.009,350,3.011,351,3.011,352,2.009,353,2.009,354,2.009,355,2.009,356,2.009,357,4.011,358,2.009,359,2.009,360,2.009,361,2.009,362,2.009,363,2.009,364,2.009,365,2.009,366,2.009,367,2.009,368,3.011,369,2.009,370,2.009,371,2.009,372,2.009,373,2.009,374,2.009,375,2.009,376,2.009,377,2.009,378,2.009,379,3.011,380,3.011,381,3.011,382,2.009,383,2.009,384,1.633,385,2.009,386,2.009,387,2.009,388,2.009,389,3.011,390,2.009,391,2.009,392,2.009,393,2.009,394,2.009,395,2.009,396,2.009,397,2.009,398,2.009,399,2.009,400,3.011,401,2.009,402,2.009,403,3.611,404,2.009,405,2.009,406,2.009,407,2.009,408,2.009,409,2.009,410,2.009,411,2.009,412,2.009,413,2.009,414,2.009,415,1.206,416,0.981,417,1.206,418,1.206,419,1.206,420,1.206,421,1.206,422,1.206,423,1.206,424,1.206,425,1.206,426,1.206,427,1.206,428,1.206,429,1.206,430,1.206,431,1.206,432,1.206,433,1.206]],["title/classes/ConfigService.html",[21,0.121,46,1.505]],["body/classes/ConfigService.html",[3,0.406,4,0.347,5,0.347,7,0.61,8,1.589,11,0.046,12,1.593,14,1.854,15,2.144,16,0.537,20,0.406,21,0.101,22,1.954,24,1.854,26,0.028,27,0.028,45,1.26,46,2.29,64,3.552,68,1.799,78,1.954,106,1.658,117,1.973,160,1.113,190,1.954,198,2.393,199,2.393,200,2.393,269,1.436,270,2.762,331,1.658,332,3.013,434,1.658,435,4.806,436,3.433,437,4.369,438,3.433,439,2.404,440,3.433,441,2.404,442,3.433,443,3.433,444,2.404,445,2.404,446,2.404,447,4.005,448,3.433,449,4.369,450,2.404,451,2.404,452,2.404,453,2.404,454,3.433,455,2.404,456,1.954,457,2.404,458,2.404,459,2.404,460,2.404,461,2.404,462,1.954,463,2.404,464,2.404,465,2.404,466,2.404,467,2.404,468,2.404,469,2.404,470,2.404,471,2.404,472,2.404,473,2.404,474,2.404,475,1.954,476,1.954,477,1.954,478,1.954,479,1.954,480,1.954]],["title/classes/CreateBookDto.html",[21,0.121,481,1.716]],["body/classes/CreateBookDto.html",[3,0.716,4,0.613,5,0.613,11,0.042,20,0.716,21,0.179,26,0.04,27,0.04,160,1.962,481,2.97,482,3.445,483,2.923]],["title/injectables/JwtStrategy.html",[82,1.178,91,1.505]],["body/injectables/JwtStrategy.html",[3,0.536,4,0.459,5,0.459,7,0.806,8,1.922,11,0.046,12,1.514,14,1.469,16,1.034,17,1.028,20,0.536,21,0.134,24,1.469,26,0.033,27,0.033,68,1.663,82,1.705,83,1.897,91,2.176,94,1.897,98,2.189,117,1.303,175,3.192,198,1.897,199,1.897,200,1.897,201,2.864,262,2.189,267,2.58,269,2.766,416,2.58,456,2.58,484,2.58,485,4.153,486,3.174,487,4.153,488,3.174,489,4.629,490,3.174,491,3.174,492,3.174,493,2.58,494,2.58,495,3.174,496,3.174,497,3.174,498,3.174,499,3.174,500,3.174,501,3.174,502,3.174]],["title/classes/UpdateBookDto.html",[21,0.121,503,1.98]],["body/classes/UpdateBookDto.html",[3,0.671,4,0.574,5,0.574,11,0.045,16,1.067,20,0.671,21,0.167,26,0.038,27,0.038,160,1.837,253,2.737,481,2.371,483,2.737,494,3.226,503,3.296,504,3.226,505,3.968,506,3.226,507,3.226,508,3.968,509,3.968]],["title/coverage.html",[510,2.679]],["body/coverage.html",[0,2.101,1,1.798,5,0.435,6,2.446,11,0.046,18,1.393,21,0.217,26,0.032,27,0.032,46,2.101,68,1.577,82,1.851,84,2.446,91,1.577,104,2.075,105,1.644,107,2.446,117,1.235,161,2.446,162,1.577,163,2.446,171,1.798,172,2.446,250,1.393,296,4.558,315,2.446,434,2.765,481,1.798,482,2.446,483,2.765,484,2.446,503,2.075,504,2.446,510,2.075,511,3.009,512,3.009,513,3.009,514,4.01,515,3.009,516,3.009,517,5.151,518,3.009,519,4.01,520,3.009,521,3.009,522,2.446,523,3.009,524,2.446,525,3.009,526,3.009,527,3.009]],["title/dependencies.html",[31,1.594,528,1.962]],["body/dependencies.html",[11,0.047,17,1.096,26,0.035,27,0.035,31,1.566,45,1.773,49,2.022,50,2.985,94,2.022,98,2.333,149,2.333,151,2.022,252,3.518,462,2.75,493,3.518,506,2.75,507,2.75,529,4.773,530,3.383,531,3.383,532,3.383,533,3.383,534,3.383,535,3.383,536,3.383,537,3.383,538,3.383,539,3.383,540,3.383,541,3.383,542,3.383,543,3.383,544,3.383,545,3.383,546,3.383,547,3.383,548,3.383,549,3.383,550,3.383,551,3.383,552,3.383,553,3.383]],["title/miscellaneous/functions.html",[554,1.443,555,2.799]],["body/miscellaneous/functions.html",[7,1.092,11,0.04,26,0.04,27,0.04,522,3.496,524,4.312,554,2.57,555,3.496,556,4.301]],["title/index.html",[7,0.613,557,2.414,558,2.414]],["body/index.html",[4,0.44,11,0.045,26,0.033,27,0.033,49,2.709,109,1.594,110,1.408,317,2.472,510,2.097,559,3.041,560,3.041,561,4.037,562,3.041,563,3.041,564,3.041,565,3.041,566,3.041,567,3.041,568,3.041,569,3.041,570,3.041,571,5.272,572,3.041,573,3.041,574,3.041,575,5.166,576,3.041,577,3.041,578,4.037,579,3.041,580,3.041,581,3.041,582,3.041,583,4.037,584,4.037,585,3.041,586,3.041,587,3.041,588,4.037,589,4.037,590,3.041,591,3.041,592,3.041,593,3.041,594,3.041,595,2.472,596,3.041,597,3.041,598,3.041,599,3.041,600,3.041,601,3.041,602,3.041,603,3.041,604,3.041,605,3.041,606,3.041,607,3.041,608,3.041,609,3.041,610,3.041,611,3.041,612,2.472]],["title/modules.html",[30,1.798]],["body/modules.html",[11,0.039,26,0.039,27,0.039,29,2.473,30,1.915,35,2.168,88,2.168,595,4.244,613,5.22,614,5.22,615,5.22]],["title/overview.html",[616,3.158]],["body/overview.html",[2,1.61,11,0.044,18,2.238,26,0.035,27,0.035,29,3.201,30,1.61,31,2.039,32,2.827,33,2.827,34,2.827,35,2.851,36,2.632,37,2.078,38,2.078,83,2.078,88,2.748,89,2.827,90,2.827,91,2.534,106,2.398,159,2.398,160,1.61,250,2.238,308,2.827,309,2.827,384,2.827,616,2.827,617,4.405,618,3.477]],["title/properties.html",[108,1.805,528,1.962]],["body/properties.html",[11,0.045,26,0.04,27,0.04,108,2.221,109,2.221,110,1.962,612,3.445,619,4.238,620,4.238,621,4.238]],["title/miscellaneous/variables.html",[554,1.443,622,2.799]],["body/miscellaneous/variables.html",[7,1.041,11,0.043,26,0.039,27,0.039,46,2.554,68,2.148,331,2.827,332,2.827,434,2.827,475,3.332,476,3.332,477,3.332,478,3.332,479,3.332,480,3.332,554,2.449,622,3.332,623,4.099]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":296,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["0.0.1",{"_index":620,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":159,"title":{"classes/Book-1.html":{}},"body":{"injectables/BooksService.html":{},"overview.html":{}}}],["1.3.1",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":384,"title":{},"body":{"injectables/BooksService.html":{},"overview.html":{}}}],["2.18.1",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":209,"title":{},"body":{"controllers/BooksController.html":{}}}],["256",{"_index":378,"title":{},"body":{"injectables/BooksService.html":{}}}],["3",{"_index":617,"title":{},"body":{"overview.html":{}}}],["3.8.2",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":195,"title":{},"body":{"controllers/BooksController.html":{}}}],["592",{"_index":157,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["592})@column",{"_index":141,"title":{},"body":{"entities/Book.html":{}}}],["6",{"_index":618,"title":{},"body":{"overview.html":{}}}],["6.2.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":153,"title":{},"body":{"entities/Book.html":{}}}],["99})@primarygeneratedcolumn",{"_index":137,"title":{},"body":{"entities/Book.html":{}}}],["accidentada",{"_index":344,"title":{},"body":{"injectables/BooksService.html":{}}}],["actualizado",{"_index":234,"title":{},"body":{"controllers/BooksController.html":{}}}],["actualizar",{"_index":233,"title":{},"body":{"controllers/BooksController.html":{}}}],["al",{"_index":407,"title":{},"body":{"injectables/BooksService.html":{}}}],["alfaguara",{"_index":377,"title":{},"body":{"injectables/BooksService.html":{}}}],["amazing",{"_index":596,"title":{},"body":{"index.html":{}}}],["amazon.com/images/i/41%2b",{"_index":382,"title":{},"body":{"injectables/BooksService.html":{}}}],["amazon.com/images/i/51iyz5mq8yl._sx326_bo1,204,203,200_.jpg",{"_index":414,"title":{},"body":{"injectables/BooksService.html":{}}}],["ameno",{"_index":336,"title":{},"body":{"injectables/BooksService.html":{}}}],["apibearerauth",{"_index":257,"title":{},"body":{"controllers/BooksController.html":{}}}],["apibearerauth('access",{"_index":266,"title":{},"body":{"controllers/BooksController.html":{}}}],["apioperation",{"_index":254,"title":{},"body":{"controllers/BooksController.html":{}}}],["apiproperty",{"_index":150,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["apiproperty({example",{"_index":118,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["apiresponse",{"_index":255,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags",{"_index":256,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags('book",{"_index":263,"title":{},"body":{"controllers/BooksController.html":{}}}],["app",{"_index":573,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":567,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arturo",{"_index":374,"title":{},"body":{"injectables/BooksService.html":{}}}],["async",{"_index":175,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["atrás",{"_index":361,"title":{},"body":{"injectables/BooksService.html":{}}}],["authguard",{"_index":259,"title":{},"body":{"controllers/BooksController.html":{}}}],["authmodule",{"_index":88,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":109,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{},"index.html":{},"properties.html":{}}}],["autor",{"_index":351,"title":{},"body":{"injectables/BooksService.html":{}}}],["await",{"_index":278,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["backers",{"_index":597,"title":{},"body":{"index.html":{}}}],["banqueros",{"_index":404,"title":{},"body":{"injectables/BooksService.html":{}}}],["body",{"_index":245,"title":{},"body":{"controllers/BooksController.html":{}}}],["book",{"_index":105,"title":{"entities/Book.html":{},"classes/Book-1.html":{}},"body":{"entities/Book.html":{},"classes/Book-1.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["book.dto",{"_index":253,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":483,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.entity",{"_index":258,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["bookdto",{"_index":162,"title":{"classes/BookDto.html":{}},"body":{"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["booket",{"_index":413,"title":{},"body":{"injectables/BooksService.html":{}}}],["bookid",{"_index":205,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books",{"_index":174,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books.controller",{"_index":312,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":251,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{}}}],["books/books.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["bookscontroller",{"_index":171,"title":{"controllers/BooksController.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["booksmodule",{"_index":35,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksrepository",{"_index":319,"title":{},"body":{"injectables/BooksService.html":{}}}],["booksservice",{"_index":250,"title":{"injectables/BooksService.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["book})@apiresponse({status",{"_index":194,"title":{},"body":{"controllers/BooksController.html":{}}}],["bootstrap",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":615,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":613,"title":{},"body":{"modules.html":{}}}],["building",{"_index":562,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":230,"title":{},"body":{"controllers/BooksController.html":{}}}],["cervantes",{"_index":155,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["cervantes'})@column",{"_index":121,"title":{},"body":{"entities/Book.html":{}}}],["class",{"_index":21,"title":{"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["classes",{"_index":160,"title":{},"body":{"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":308,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_imports",{"_index":310,"title":{},"body":{"modules/BooksModule.html":{}}}],["cluster_booksmodule_providers",{"_index":309,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["colectivo",{"_index":408,"title":{},"body":{"injectables/BooksService.html":{}}}],["column",{"_index":147,"title":{},"body":{"entities/Book.html":{}}}],["column('text",{"_index":132,"title":{},"body":{"entities/Book.html":{}}}],["como",{"_index":387,"title":{},"body":{"injectables/BooksService.html":{}}}],["concebida",{"_index":349,"title":{},"body":{"injectables/BooksService.html":{}}}],["conferencia",{"_index":405,"title":{},"body":{"injectables/BooksService.html":{}}}],["config/config/config.service",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":46,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env).ensurevalues",{"_index":475,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":454,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor",{"_index":269,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(booksrepository",{"_index":316,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(env",{"_index":439,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{}}}],["contada",{"_index":385,"title":{},"body":{"injectables/BooksService.html":{}}}],["contarlo",{"_index":370,"title":{},"body":{"injectables/BooksService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"coverage.html":{}}}],["controller('books",{"_index":264,"title":{},"body":{"controllers/BooksController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["coverage",{"_index":510,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creado",{"_index":193,"title":{},"body":{"controllers/BooksController.html":{}}}],["crear",{"_index":187,"title":{},"body":{"controllers/BooksController.html":{}}}],["create",{"_index":508,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["createbook",{"_index":176,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["createbook(newbook",{"_index":320,"title":{},"body":{"injectables/BooksService.html":{}}}],["createbook(request",{"_index":182,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbookdto",{"_index":481,"title":{"classes/CreateBookDto.html":{}},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createquerybuilder",{"_index":423,"title":{},"body":{"injectables/BooksService.html":{}}}],["data",{"_index":277,"title":{},"body":{"controllers/BooksController.html":{}}}],["data['affected",{"_index":295,"title":{},"body":{"controllers/BooksController.html":{}}}],["database",{"_index":471,"title":{},"body":{"classes/ConfigService.html":{}}}],["date.now",{"_index":276,"title":{},"body":{"controllers/BooksController.html":{}}}],["datos",{"_index":191,"title":{},"body":{"controllers/BooksController.html":{}}}],["dd",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":120,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["debug",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["debug.log",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["default",{"_index":331,"title":{},"body":{"injectables/BooksService.html":{},"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["del",{"_index":125,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["delete",{"_index":246,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["delete(':bookid",{"_index":293,"title":{},"body":{"controllers/BooksController.html":{}}}],["delete(':bookid')@apioperation({summary",{"_index":206,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebook",{"_index":177,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["deletebook(bookid",{"_index":322,"title":{},"body":{"injectables/BooksService.html":{}}}],["deletebook(request",{"_index":204,"title":{},"body":{"controllers/BooksController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desapasionada",{"_index":393,"title":{},"body":{"injectables/BooksService.html":{}}}],["description",{"_index":110,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"index.html":{},"properties.html":{}}}],["desde",{"_index":362,"title":{},"body":{"injectables/BooksService.html":{}}}],["development",{"_index":574,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":202,"title":{},"body":{"controllers/BooksController.html":{}}}],["dirname",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["disfrutar",{"_index":358,"title":{},"body":{"injectables/BooksService.html":{}}}],["dist/**/*.entity.js",{"_index":473,"title":{},"body":{"classes/ConfigService.html":{}}}],["divertirme",{"_index":355,"title":{},"body":{"injectables/BooksService.html":{}}}],["documentation",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["don",{"_index":128,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["duration",{"_index":307,"title":{},"body":{"controllers/BooksController.html":{}}}],["e2e",{"_index":585,"title":{},"body":{"index.html":{}}}],["e981m1l._sx311_bo1,204,203,200_.jpg",{"_index":383,"title":{},"body":{"injectables/BooksService.html":{}}}],["edición",{"_index":124,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["efficient",{"_index":563,"title":{},"body":{"index.html":{}}}],["el",{"_index":203,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["elapsedtime",{"_index":300,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminado",{"_index":210,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminar",{"_index":207,"title":{},"body":{"controllers/BooksController.html":{}}}],["ello",{"_index":369,"title":{},"body":{"injectables/BooksService.html":{}}}],["en",{"_index":352,"title":{},"body":{"injectables/BooksService.html":{}}}],["ensurevalues",{"_index":436,"title":{},"body":{"classes/ConfigService.html":{}}}],["ensurevalues(keys",{"_index":443,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":106,"title":{},"body":{"entities/Book.html":{},"classes/ConfigService.html":{},"overview.html":{}}}],["entity",{"_index":104,"title":{"entities/Book.html":{}},"body":{"entities/Book.html":{},"coverage.html":{}}}],["env",{"_index":442,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${key",{"_index":459,"title":{},"body":{"classes/ConfigService.html":{}}}],["episcopal",{"_index":406,"title":{},"body":{"injectables/BooksService.html":{}}}],["error",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["error(`config",{"_index":457,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.log",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["es",{"_index":397,"title":{},"body":{"injectables/BooksService.html":{}}}],["escribe",{"_index":388,"title":{},"body":{"injectables/BooksService.html":{}}}],["escrito",{"_index":371,"title":{},"body":{"injectables/BooksService.html":{}}}],["escépticos",{"_index":386,"title":{},"body":{"injectables/BooksService.html":{}}}],["eslava",{"_index":411,"title":{},"body":{"injectables/BooksService.html":{}}}],["españa",{"_index":334,"title":{},"body":{"injectables/BooksService.html":{}}}],["específico",{"_index":213,"title":{},"body":{"controllers/BooksController.html":{}}}],["específico'})@apiresponse({status",{"_index":208,"title":{},"body":{"controllers/BooksController.html":{}}}],["est",{"_index":398,"title":{},"body":{"injectables/BooksService.html":{}}}],["esta",{"_index":123,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["example",{"_index":152,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["execute",{"_index":426,"title":{},"body":{"injectables/BooksService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["exports",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":252,"title":{},"body":{"controllers/BooksController.html":{},"dependencies.html":{}}}],["extends",{"_index":494,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["extractjwt",{"_index":491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":498,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["filename",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["filtrar",{"_index":223,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall",{"_index":178,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findall(@req",{"_index":275,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall(params",{"_index":324,"title":{},"body":{"injectables/BooksService.html":{}}}],["findall(request",{"_index":214,"title":{},"body":{"controllers/BooksController.html":{}}}],["findbook",{"_index":179,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findbook(bookid",{"_index":327,"title":{},"body":{"injectables/BooksService.html":{}}}],["findbook(request",{"_index":225,"title":{},"body":{"controllers/BooksController.html":{}}}],["finishtime",{"_index":299,"title":{},"body":{"controllers/BooksController.html":{}}}],["forbidden",{"_index":196,"title":{},"body":{"controllers/BooksController.html":{}}}],["format",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":288,"title":{},"body":{"controllers/BooksController.html":{}}}],["framework",{"_index":561,"title":{},"body":{"index.html":{}}}],["frasesecretaquenadiepodraadivinar",{"_index":500,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["from(book",{"_index":424,"title":{},"body":{"injectables/BooksService.html":{}}}],["function",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":555,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["galán",{"_index":412,"title":{},"body":{"injectables/BooksService.html":{}}}],["gay",{"_index":409,"title":{},"body":{"injectables/BooksService.html":{}}}],["genre",{"_index":111,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["get(':bookid",{"_index":284,"title":{},"body":{"controllers/BooksController.html":{}}}],["get(':bookid')@apioperation({summary",{"_index":226,"title":{},"body":{"controllers/BooksController.html":{}}}],["get()@apioperation({summary",{"_index":215,"title":{},"body":{"controllers/BooksController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":557,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":437,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue",{"_index":438,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":448,"title":{},"body":{"classes/ConfigService.html":{}}}],["gobernantes",{"_index":402,"title":{},"body":{"injectables/BooksService.html":{}}}],["grow",{"_index":592,"title":{},"body":{"index.html":{}}}],["halagar",{"_index":400,"title":{},"body":{"injectables/BooksService.html":{}}}],["hasta",{"_index":365,"title":{},"body":{"injectables/BooksService.html":{}}}],["hecha",{"_index":399,"title":{},"body":{"injectables/BooksService.html":{}}}],["hello",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":603,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["hidalgo",{"_index":127,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["historia",{"_index":333,"title":{},"body":{"injectables/BooksService.html":{}}}],["host",{"_index":463,"title":{},"body":{"classes/ConfigService.html":{}}}],["httpexception",{"_index":416,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpexception('invalid",{"_index":501,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://images",{"_index":379,"title":{},"body":{"injectables/BooksService.html":{}}}],["https://nestjs.com",{"_index":609,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":262,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpstatus.created",{"_index":290,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.ok",{"_index":274,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.unauthorized",{"_index":502,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":112,"title":{},"body":{"entities/Book.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["identificador",{"_index":212,"title":{},"body":{"controllers/BooksController.html":{}}}],["identifier",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["image_url",{"_index":113,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["images",{"_index":381,"title":{},"body":{"injectables/BooksService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["info.log",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["información",{"_index":227,"title":{},"body":{"controllers/BooksController.html":{}}}],["ingenioso",{"_index":126,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["inject",{"_index":248,"title":{},"body":{"controllers/BooksController.html":{}}}],["inject(winston_module_provider",{"_index":271,"title":{},"body":{"controllers/BooksController.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":417,"title":{},"body":{"injectables/BooksService.html":{}}}],["injectrepository(book",{"_index":418,"title":{},"body":{"injectables/BooksService.html":{}}}],["installation",{"_index":570,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":572,"title":{},"body":{"index.html":{}}}],["irónico",{"_index":339,"title":{},"body":{"injectables/BooksService.html":{}}}],["join",{"_index":599,"title":{},"body":{"index.html":{}}}],["json",{"_index":289,"title":{},"body":{"controllers/BooksController.html":{}}}],["juan",{"_index":410,"title":{},"body":{"injectables/BooksService.html":{}}}],["justa",{"_index":392,"title":{},"body":{"injectables/BooksService.html":{}}}],["jwt",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":497,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":91,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":453,"title":{},"body":{"classes/ConfigService.html":{}}}],["kamil",{"_index":606,"title":{},"body":{"index.html":{}}}],["key",{"_index":451,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":445,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":460,"title":{},"body":{"classes/ConfigService.html":{}}}],["la",{"_index":130,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["level",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{}}}],["libro",{"_index":192,"title":{},"body":{"controllers/BooksController.html":{}}}],["libro'})@apiresponse({status",{"_index":189,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros",{"_index":219,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros'})@apiresponse({status",{"_index":218,"title":{},"body":{"controllers/BooksController.html":{}}}],["license",{"_index":612,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":589,"title":{},"body":{"index.html":{}}}],["lista",{"_index":217,"title":{},"body":{"controllers/BooksController.html":{}}}],["literal",{"_index":440,"title":{},"body":{"classes/ConfigService.html":{}}}],["lo",{"_index":396,"title":{},"body":{"injectables/BooksService.html":{}}}],["log/debug",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["log/error",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["log/info",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":261,"title":{},"body":{"controllers/BooksController.html":{}}}],["los",{"_index":346,"title":{},"body":{"injectables/BooksService.html":{}}}],["mancha",{"_index":131,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["mancha'})@column",{"_index":145,"title":{},"body":{"entities/Book.html":{}}}],["manera",{"_index":372,"title":{},"body":{"injectables/BooksService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":282,"title":{},"body":{"controllers/BooksController.html":{}}}],["metadata",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":302,"title":{},"body":{"controllers/BooksController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["miguel",{"_index":119,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["mirar",{"_index":360,"title":{},"body":{"injectables/BooksService.html":{}}}],["miscellaneous",{"_index":554,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":458,"title":{},"body":{"classes/ConfigService.html":{}}}],["mit",{"_index":588,"title":{},"body":{"index.html":{}}}],["mm",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":578,"title":{},"body":{"index.html":{}}}],["modificar",{"_index":236,"title":{},"body":{"controllers/BooksController.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":602,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":462,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":607,"title":{},"body":{"index.html":{}}}],["na.ssl",{"_index":380,"title":{},"body":{"injectables/BooksService.html":{}}}],["name",{"_index":199,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["nest",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":611,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":506,"title":{},"body":{"classes/UpdateBookDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":151,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"dependencies.html":{}}}],["new",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newbook",{"_index":184,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["ni",{"_index":403,"title":{},"body":{"injectables/BooksService.html":{}}}],["nico",{"_index":342,"title":{},"body":{"injectables/BooksService.html":{}}}],["ninguna",{"_index":395,"title":{},"body":{"injectables/BooksService.html":{}}}],["node.js",{"_index":560,"title":{},"body":{"index.html":{}}}],["novela",{"_index":154,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["novela'})@column",{"_index":134,"title":{},"body":{"entities/Book.html":{}}}],["npm",{"_index":571,"title":{},"body":{"index.html":{}}}],["nuestra",{"_index":343,"title":{},"body":{"injectables/BooksService.html":{}}}],["number",{"_index":136,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["object.assign(toupdate",{"_index":432,"title":{},"body":{"injectables/BooksService.html":{}}}],["obra",{"_index":348,"title":{},"body":{"injectables/BooksService.html":{}}}],["obtener",{"_index":216,"title":{},"body":{"controllers/BooksController.html":{}}}],["ok",{"_index":283,"title":{},"body":{"controllers/BooksController.html":{}}}],["open",{"_index":590,"title":{},"body":{"index.html":{}}}],["optional",{"_index":200,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["ortodoxa",{"_index":373,"title":{},"body":{"injectables/BooksService.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["overview",{"_index":616,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":528,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":114,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["palabras",{"_index":353,"title":{},"body":{"injectables/BooksService.html":{}}}],["para",{"_index":222,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["param",{"_index":242,"title":{},"body":{"controllers/BooksController.html":{}}}],["param('bookid",{"_index":285,"title":{},"body":{"controllers/BooksController.html":{}}}],["parameters",{"_index":198,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["params",{"_index":326,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(bookid",{"_index":428,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(this.getvalue('tutorial_port",{"_index":466,"title":{},"body":{"classes/ConfigService.html":{}}}],["partialtype",{"_index":505,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createbookdto",{"_index":509,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["parámetros",{"_index":221,"title":{},"body":{"controllers/BooksController.html":{}}}],["passport",{"_index":493,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":495,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":469,"title":{},"body":{"classes/ConfigService.html":{}}}],["path",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(__dirname",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":489,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pero",{"_index":340,"title":{},"body":{"injectables/BooksService.html":{}}}],["personal",{"_index":337,"title":{},"body":{"injectables/BooksService.html":{}}}],["please",{"_index":600,"title":{},"body":{"index.html":{}}}],["poco",{"_index":368,"title":{},"body":{"injectables/BooksService.html":{}}}],["por",{"_index":350,"title":{},"body":{"injectables/BooksService.html":{}}}],["porque",{"_index":394,"title":{},"body":{"injectables/BooksService.html":{}}}],["port",{"_index":465,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":244,"title":{},"body":{"controllers/BooksController.html":{}}}],["post()@apioperation({summary",{"_index":186,"title":{},"body":{"controllers/BooksController.html":{}}}],["prefix",{"_index":173,"title":{},"body":{"controllers/BooksController.html":{}}}],["presente",{"_index":366,"title":{},"body":{"injectables/BooksService.html":{}}}],["pretende",{"_index":389,"title":{},"body":{"injectables/BooksService.html":{}}}],["pretexto",{"_index":359,"title":{},"body":{"injectables/BooksService.html":{}}}],["primarygeneratedcolumn",{"_index":148,"title":{},"body":{"entities/Book.html":{}}}],["private",{"_index":270,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["production",{"_index":580,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":559,"title":{},"body":{"index.html":{}}}],["project",{"_index":591,"title":{},"body":{"index.html":{}}}],["promise",{"_index":201,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["properties",{"_index":108,"title":{"properties.html":{}},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{},"properties.html":{}}}],["property",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["public",{"_index":435,"title":{},"body":{"classes/ConfigService.html":{}}}],["publisher",{"_index":115,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["put",{"_index":247,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid",{"_index":297,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid')@apioperation({summary",{"_index":232,"title":{},"body":{"controllers/BooksController.html":{}}}],["pérez",{"_index":375,"title":{},"body":{"injectables/BooksService.html":{}}}],["quijote",{"_index":129,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["ratos",{"_index":338,"title":{},"body":{"injectables/BooksService.html":{}}}],["read",{"_index":601,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["redoc",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["reflexionar",{"_index":367,"title":{},"body":{"injectables/BooksService.html":{}}}],["relato",{"_index":335,"title":{},"body":{"injectables/BooksService.html":{}}}],["releer",{"_index":356,"title":{},"body":{"injectables/BooksService.html":{}}}],["remotos",{"_index":364,"title":{},"body":{"injectables/BooksService.html":{}}}],["repository",{"_index":317,"title":{},"body":{"injectables/BooksService.html":{},"index.html":{}}}],["req",{"_index":243,"title":{},"body":{"controllers/BooksController.html":{}}}],["request",{"_index":183,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['method",{"_index":303,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['url",{"_index":305,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['user'].username",{"_index":306,"title":{},"body":{"controllers/BooksController.html":{}}}],["require('dotenv').config",{"_index":452,"title":{},"body":{"classes/ConfigService.html":{}}}],["res",{"_index":185,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.created).json",{"_index":292,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":281,"title":{},"body":{"controllers/BooksController.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["reverte",{"_index":376,"title":{},"body":{"injectables/BooksService.html":{}}}],["reyes",{"_index":401,"title":{},"body":{"injectables/BooksService.html":{}}}],["run",{"_index":575,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["santillana",{"_index":156,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["santillana'})@column",{"_index":143,"title":{},"body":{"entities/Book.html":{}}}],["scalable",{"_index":564,"title":{},"body":{"index.html":{}}}],["secretorkey",{"_index":499,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ser",{"_index":390,"title":{},"body":{"injectables/BooksService.html":{}}}],["server",{"_index":565,"title":{},"body":{"index.html":{}}}],["servicio",{"_index":268,"title":{},"body":{"controllers/BooksController.html":{}}}],["session",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":566,"title":{},"body":{"index.html":{}}}],["siempre",{"_index":341,"title":{},"body":{"injectables/BooksService.html":{}}}],["siglos",{"_index":347,"title":{},"body":{"injectables/BooksService.html":{}}}],["sobre",{"_index":228,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"index.html":{}}}],["specified",{"_index":287,"title":{},"body":{"controllers/BooksController.html":{}}}],["sponsors",{"_index":594,"title":{},"body":{"index.html":{}}}],["src/.../config.service.ts",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/books/book.class.ts",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["src/books/book.entity.ts",{"_index":107,"title":{},"body":{"entities/Book.html":{},"coverage.html":{}}}],["src/books/book.entity.ts:12",{"_index":146,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:16",{"_index":135,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:22",{"_index":133,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:26",{"_index":122,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:30",{"_index":144,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:34",{"_index":142,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:38",{"_index":140,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:8",{"_index":138,"title":{},"body":{"entities/Book.html":{}}}],["src/books/books.controller.ts",{"_index":172,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/books/books.controller.ts:113",{"_index":197,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:140",{"_index":211,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:175",{"_index":235,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:197",{"_index":239,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:54",{"_index":220,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:79",{"_index":229,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.dto.ts",{"_index":163,"title":{},"body":{"classes/BookDto.html":{},"coverage.html":{}}}],["src/books/books.dto.ts:13",{"_index":165,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.dto.ts:16",{"_index":164,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.dto.ts:19",{"_index":169,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.dto.ts:22",{"_index":168,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.dto.ts:25",{"_index":167,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.dto.ts:5",{"_index":170,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.dto.ts:8",{"_index":166,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.module.ts",{"_index":311,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/books/books.service.ts",{"_index":315,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/books/books.service.ts:34",{"_index":318,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:40",{"_index":325,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:44",{"_index":328,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:48",{"_index":321,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:52",{"_index":323,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:63",{"_index":330,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:9",{"_index":415,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/dto/create",{"_index":482,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/books/dto/update",{"_index":504,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/books/entities/book.entity.ts",{"_index":161,"title":{},"body":{"classes/Book-1.html":{},"coverage.html":{}}}],["src/config/config/config.service.ts",{"_index":434,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/config/config.service.ts:17",{"_index":444,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:22",{"_index":446,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:5",{"_index":441,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:8",{"_index":450,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/main.ts",{"_index":522,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utilities/auth.module.ts",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/utilities/jwt.strategy.ts",{"_index":484,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/utilities/jwt.strategy.ts:14",{"_index":488,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/utilities/jwt.strategy.ts:6",{"_index":486,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["stack",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":576,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":579,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":581,"title":{},"body":{"index.html":{}}}],["started",{"_index":558,"title":{"index.html":{}},"body":{}}],["starter",{"_index":569,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":240,"title":{},"body":{"controllers/BooksController.html":{}}}],["statements",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":273,"title":{},"body":{"controllers/BooksController.html":{}}}],["statuscode",{"_index":238,"title":{},"body":{"controllers/BooksController.html":{}}}],["stay",{"_index":604,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":492,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["summary",{"_index":272,"title":{},"body":{"controllers/BooksController.html":{}}}],["super",{"_index":496,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":595,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suyas",{"_index":354,"title":{},"body":{"injectables/BooksService.html":{}}}],["svg",{"_index":614,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":474,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":584,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":587,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":586,"title":{},"body":{"index.html":{}}}],["tests",{"_index":583,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":593,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.booksrepository",{"_index":422,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.delete",{"_index":427,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.find",{"_index":419,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone",{"_index":420,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone(bookid",{"_index":430,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(newbook",{"_index":421,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(updated",{"_index":433,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksservice.createbook(newbook",{"_index":291,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.deletebook(bookid",{"_index":294,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findall(request.query",{"_index":279,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findbook(bookid",{"_index":286,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.updatebook(bookid",{"_index":298,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.env[key",{"_index":455,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_database",{"_index":472,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_host",{"_index":464,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_password",{"_index":470,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_user",{"_index":468,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":461,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.logger.log",{"_index":301,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.writelog(starttime",{"_index":280,"title":{},"body":{"controllers/BooksController.html":{}}}],["throw",{"_index":456,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["throwonmissing",{"_index":449,"title":{},"body":{"classes/ConfigService.html":{}}}],["tiempos",{"_index":363,"title":{},"body":{"injectables/BooksService.html":{}}}],["title",{"_index":116,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["token",{"_index":267,"title":{},"body":{"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":605,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":429,"title":{},"body":{"injectables/BooksService.html":{}}}],["transports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["través",{"_index":345,"title":{},"body":{"injectables/BooksService.html":{}}}],["true",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["tutorial_database",{"_index":480,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_host",{"_index":476,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_password",{"_index":479,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_port",{"_index":477,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_user",{"_index":478,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":610,"title":{},"body":{"index.html":{}}}],["type",{"_index":117,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["typeorm",{"_index":149,"title":{},"body":{"entities/Book.html":{},"injectables/BooksService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([book",{"_index":314,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forroot(configservice.gettypeormconfig",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":447,"title":{},"body":{"classes/ConfigService.html":{}}}],["types",{"_index":507,"title":{},"body":{"classes/UpdateBookDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":568,"title":{},"body":{"index.html":{}}}],["ui",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":188,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["una",{"_index":224,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["undefined",{"_index":190,"title":{},"body":{"controllers/BooksController.html":{},"classes/ConfigService.html":{}}}],["unit",{"_index":582,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":621,"title":{},"body":{"properties.html":{}}}],["updatebook",{"_index":180,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["updatebook(bookid",{"_index":329,"title":{},"body":{"injectables/BooksService.html":{}}}],["updatebook(request",{"_index":231,"title":{},"body":{"controllers/BooksController.html":{}}}],["updatebookdto",{"_index":503,"title":{"classes/UpdateBookDto.html":{}},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updated",{"_index":431,"title":{},"body":{"injectables/BooksService.html":{}}}],["url",{"_index":304,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards",{"_index":249,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards(authguard('jwt",{"_index":265,"title":{},"body":{"controllers/BooksController.html":{}}}],["user",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{}}}],["username",{"_index":467,"title":{},"body":{"classes/ConfigService.html":{}}}],["utilities/auth.module",{"_index":313,"title":{},"body":{"modules/BooksModule.html":{}}}],["validate",{"_index":485,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":487,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":332,"title":{},"body":{"injectables/BooksService.html":{},"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":622,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veraz",{"_index":391,"title":{},"body":{"injectables/BooksService.html":{}}}],["version",{"_index":619,"title":{},"body":{"properties.html":{}}}],["void",{"_index":241,"title":{},"body":{"controllers/BooksController.html":{}}}],["watch",{"_index":577,"title":{},"body":{"index.html":{}}}],["website",{"_index":608,"title":{},"body":{"index.html":{}}}],["whereinids(bookid",{"_index":425,"title":{},"body":{"injectables/BooksService.html":{}}}],["winston",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["winston.format.combine",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.errors",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.json",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.splat",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.timestamp",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":260,"title":{},"body":{"controllers/BooksController.html":{}}}],["winstonmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["writelog",{"_index":181,"title":{},"body":{"controllers/BooksController.html":{}}}],["writelog(starttime",{"_index":237,"title":{},"body":{"controllers/BooksController.html":{}}}],["www.imagen.com/quijote.png",{"_index":158,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["www.imagen.com/quijote.png'})@column",{"_index":139,"title":{},"body":{"entities/Book.html":{}}}],["y",{"_index":357,"title":{},"body":{"injectables/BooksService.html":{}}}],["you'd",{"_index":598,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BooksModule } from './books/books.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { configService } from './config/config/config.service';\nimport { WinstonModule } from 'nest-winston';\nimport * as winston from 'winston';\nimport * as path from 'path';\n\n@Module({\n  imports: [\n    BooksModule,\n    TypeOrmModule.forRoot(configService.getTypeOrmConfig()),\n    WinstonModule.forRoot({\n      level: 'info',\n      format: winston.format.combine(\n        winston.format.timestamp({\n          format: 'YYYY-MM-DD HH:mm:ss',\n        }),\n        winston.format.errors({ stack: true }),\n        winston.format.splat(),\n        winston.format.json(),\n      ),\n      transports: [\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/debug/'),\n          filename: 'debug.log',\n          level: 'debug',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/error/'),\n          filename: 'error.log',\n          level: 'error',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/info/'),\n          filename: 'info.log',\n          level: 'info',\n        }),\n        new winston.transports.Console({ level: 'debug' }),\n      ],\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n@Module({\n  imports: [\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n  ],\n  controllers: [],\n  providers: [JwtStrategy],\n  exports: [PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Book.html":{"url":"entities/Book.html","title":"entity - Book","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 99})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Book {\n  @ApiProperty({ example: 99 })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  @Column()\n  title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  @Column()\n  genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  @Column('text')\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  @Column()\n  author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  @Column()\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  @Column()\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  @Column()\n  image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book-1.html":{"url":"classes/Book-1.html","title":"class - Book-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/entities/book.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Book {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDto.html":{"url":"classes/BookDto.html","title":"class - BookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/books.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/books.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/books.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/books.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/books.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/books.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/books.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class BookDto {\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  readonly title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  readonly genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  readonly description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  readonly author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  readonly publisher: string;\n\n  @ApiProperty({ example: 592 })\n  readonly pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  readonly image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                            \n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBook(request: Request, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Crear un libro'})@ApiResponse({status: undefined, description: 'Datos del libro creado', type: Book})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Libro a crear\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Devuelve el libro creado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':bookId')@ApiOperation({summary: 'Eliminar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro eliminado'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a eliminar\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Eliminar un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtener lista de libros'})@ApiResponse({status: undefined, description: 'Lista de libros', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Lista de parámetros para filtrar\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Devuelve una lista de libros\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':bookId')@ApiOperation({summary: 'Devuelve información sobre un libro específico'})@ApiResponse({status: undefined, description: 'Datos del libro', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a buscar\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Devuelve un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(request: Request, bookId: string, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':bookId')@ApiOperation({summary: 'Actualizar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro actualizado', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a modificar\n\n                                    \n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Libro actualizado\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Modificar un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeLog\n                        \n                    \n                \n            \n            \n                \nwriteLog(startTime: any, request: any, statusCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Req,\n  Post,\n  Body,\n  Delete,\n  Put,\n  Inject,\n  UseGuards,\n  Res,\n} from '@nestjs/common';\nimport { BooksService } from './books.service';\nimport { Request } from 'express';\nimport { BookDto } from './book.dto';\nimport {\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { Book } from './book.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { HttpStatus } from '@nestjs/common';\n@ApiTags('book')\n@Controller('books')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class BooksController {\n  /**\n   *\n   * @param {BooksService} booksService  Servicio de libros\n   */\n  constructor(\n    private booksService: BooksService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   *\n   * @returns {Book[]} Devuelve una lista de libros\n   * @param {Request} request Lista de parámetros para filtrar\n   */\n  @Get()\n  @ApiOperation({ summary: 'Obtener lista de libros' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Lista de libros',\n    type: [Book],\n  })\n  async findAll(@Req() request: Request, @Res() res): Promise {\n    let startTime = Date.now();\n    let data = await this.booksService.findAll(request.query);\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: 'OK',\n      data: data,\n    });\n  }\n\n  /**\n   *\n   * @returns {Book} Devuelve un libro específico\n   * @param {string} bookId  Identificador del libro a buscar\n   */\n\n  @Get(':bookId')\n  @ApiOperation({ summary: 'Devuelve información sobre un libro específico' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Datos del libro',\n    type: Book,\n  })\n  async findBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.findBook(bookId);\n\n    if (!data) {\n      message = 'A book with the specified id was not found';\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  /**\n   *\n   * @returns {Book} Devuelve el libro creado\n   * @param {JSON} newBook  Libro a crear\n   */\n  @Post()\n  @ApiOperation({ summary: 'Crear un libro' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Datos del libro creado',\n    type: Book,\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async createBook(\n    @Req() request: Request,\n    @Body() newBook: BookDto,\n    @Res() res,\n  ): Promise {\n    let startTime = Date.now();\n    let data = await this.booksService.createBook(newBook);\n\n    this.writeLog(startTime, request, HttpStatus.CREATED);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      message: 'OK',\n      data: data,\n    });\n  }\n\n  /**\n   *\n   * @returns {Book} Eliminar un libro específico\n   * @param {string} bookId  Identificador del libro a eliminar\n   */\n  @Delete(':bookId')\n  @ApiOperation({ summary: 'Eliminar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro eliminado',\n  })\n  async deleteBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.deleteBook(bookId);\n\n    if (data['affected'] == 0) {\n      message = 'A book with the specified id was not found';\n      data = {};\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  /**\n   *\n   * @returns {Book} Modificar un libro específico\n   * @param {string} bookId  Identificador del libro a modificar\n   * @param {JSON} newBook Libro actualizado\n   */\n  @Put(':bookId')\n  @ApiOperation({ summary: 'Actualizar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro actualizado',\n    type: Book,\n  })\n  async updateBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Body() newBook: BookDto,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.updateBook(bookId, newBook);\n\n    if (!data) {\n      message = 'A book with the specified id was not found';\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  writeLog(startTime: any, request: any, statusCode: number) {\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n\n    this.logger.log({\n      level: 'info',\n      message: '',\n      statusCode: statusCode,\n      method: request['method'],\n      url: request['url'],\n      user: request['user'].username,\n      duration: elapsedTime,\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\ncluster_BooksModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books/books.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Book } from './book.entity';\nimport { BooksService } from './books.service';\nimport { BooksController } from './books.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from '../utilities/auth.module';\n@Module({\n  imports: [TypeOrmModule.forFeature([Book]), AuthModule],\n  providers: [BooksService],\n  controllers: [BooksController],\n})\nexport class BooksModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(booksRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books/books.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        booksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBook\n                        \n                    \n                \n            \n            \n                \ncreateBook(newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(bookId: string, newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Book[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      title: 'Una historia de España',\n      genre: 'Historia',\n      description:\n        'Un relato ameno, personal, a ratos irónico, pero siempre único, de nuestra accidentada historia a través de los siglos. Una obra concebida por el autor para, en palabras suyas, «divertirme, releer y disfrutar; un pretexto para mirar atrás desde los tiempos remotos hasta el presente, reflexionar un poco sobre ello y contarlo por escrito de una manera poco ortodoxa.',\n      author: 'Arturo Pérez-Reverte',\n      publisher: 'Alfaguara',\n      pages: 256,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/41%2B-e981m1L._SX311_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Historia de España contada para escépticos',\n      genre: 'Historia',\n      description:\n        'Como escribe el autor, no pretende ser veraz, justa y desapasionada, porque ninguna historia lo es. No está hecha para halagar a reyes y gobernantes, ni pretende halagar a los banqueros, ni a la Conferencia Episcopal, ni al colectivo gay.',\n      author: 'Juan Eslava Galán',\n      publisher: 'Booket',\n      pages: 592,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/51IyZ5Mq8YL._SX326_BO1,204,203,200_.jpg',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/books/books.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { BookDto } from './book.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Book } from './book.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class BooksService {\n  books: Book[] = [\n    {\n      id: 1,\n      title: 'Una historia de España',\n      genre: 'Historia',\n      description:\n        'Un relato ameno, personal, a ratos irónico, pero siempre único, de nuestra accidentada historia a través de los siglos. Una obra concebida por el autor para, en palabras suyas, «divertirme, releer y disfrutar; un pretexto para mirar atrás desde los tiempos remotos hasta el presente, reflexionar un poco sobre ello y contarlo por escrito de una manera poco ortodoxa.',\n      author: 'Arturo Pérez-Reverte',\n      publisher: 'Alfaguara',\n      pages: 256,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/41%2B-e981m1L._SX311_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Historia de España contada para escépticos',\n      genre: 'Historia',\n      description:\n        'Como escribe el autor, no pretende ser veraz, justa y desapasionada, porque ninguna historia lo es. No está hecha para halagar a reyes y gobernantes, ni pretende halagar a los banqueros, ni a la Conferencia Episcopal, ni al colectivo gay.',\n      author: 'Juan Eslava Galán',\n      publisher: 'Booket',\n      pages: 592,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/51IyZ5Mq8YL._SX326_BO1,204,203,200_.jpg',\n    },\n  ];\n\n  constructor(\n    @InjectRepository(Book) private booksRepository: Repository,\n  ) {}\n\n  async findAll(params): Promise {\n    return await this.booksRepository.find();\n  }\n\n  async findBook(bookId: string): Promise {\n    return await this.booksRepository.findOne({ where: { id: bookId } });\n  }\n\n  createBook(newBook: BookDto): Promise {\n    return this.booksRepository.save(newBook);\n  }\n\n  async deleteBook(bookId: string): Promise {\n    /*    return await this.booksRepository\n      .createQueryBuilder()\n      .delete()\n      .from(Book)\n      .whereInIds(bookId)\n      .execute();\n*/\n    return await this.booksRepository.delete({ id: parseInt(bookId) });\n  }\n\n  async updateBook(bookId: string, newBook: BookDto): Promise {\n    let toUpdate = await this.booksRepository.findOne(bookId);\n\n    let updated = Object.assign(toUpdate, newBook);\n\n    return this.booksRepository.save(updated);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config/config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getTypeOrmConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/config/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ensureValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getTypeOrmConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypeOrmConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nrequire('dotenv').config();\n\nclass ConfigService {\n  constructor(private env: { [k: string]: string | undefined }) {}\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key];\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`);\n    }\n\n    return value;\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach(k => this.getValue(k, true));\n    return this;\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions {\n    return {\n      type: 'mysql',\n\n      host: this.getValue('TUTORIAL_HOST'),\n      port: parseInt(this.getValue('TUTORIAL_PORT')),\n      username: this.getValue('TUTORIAL_USER'),\n      password: this.getValue('TUTORIAL_PASSWORD'),\n      database: this.getValue('TUTORIAL_DATABASE'),\n\n      entities: ['dist/**/*.entity.js'],\n      synchronize: true,\n    };\n  }\n}\n\nconst configService = new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n]);\n\nexport { configService };\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBookDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utilities/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'frasesecretaquenadiepodraadivinar',\n    });\n  }\n\n  async validate(payload: any): Promise {\n    if (!payload) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBookDto } from './create-book.dto';\n\nexport class UpdateBookDto extends PartialType(CreateBookDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/books/book.class.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/book.entity.ts\n            \n            entity\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/books/books.dto.ts\n            \n            class\n            BookDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/books/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/books/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/books/entities/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/config/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            mysql : ^2.18.1\n        \n            nest-winston : ^1.8.0\n        \n            nestjs-redoc : ^1.3.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.0\n        \n            typeorm : ^0.3.12\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (src/.../config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config/config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
